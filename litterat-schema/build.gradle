/*
 * Copyright (c) 2003-2020, Live Media Pty. Ltd. All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
 
buildscript {
  repositories {
    jcenter()
    maven { 
      url "https://repo.maven.apache.org/maven2"
    }
    maven {
      url "https://plugins.gradle.org/m2/"
    }
  }
  dependencies {
    classpath "org.javamodularity:moduleplugin:1.5.0"
    classpath 'com.bmuschko:gradle-nexus-plugin:2.3.1'
    
  }
}

apply plugin: 'java'
apply plugin: 'maven'
apply plugin: 'com.bmuschko.nexus'

// Development environments
apply plugin: 'eclipse'
eclipse {
    classpath {
        defaultOutputDir = new File("$buildDir/eclipse");
        file {
            whenMerged {
                entries.findAll { isModule(it) }.each {
                    it.entryAttributes['module'] = 'true'
                }

                entries.findAll { isSource(it) && isTestScope(it) }.each {
                    it.entryAttributes['test'] = 'true'
                }

                entries.findAll { isLibrary(it) && isTestScope(it) }.each {
                    it.entryAttributes['test'] = 'true'
                }
            }
        }
    }

}

group = 'io.litterat'
version = '0.5.0'

sourceCompatibility = 11
targetCompatibility = 11

repositories {
    maven { url "https://repo.maven.apache.org/maven2" }
}

dependencies {

    // litterat-pep
    implementation project(":litterat-pep")
    
}

test {
	useJUnitPlatform()
}

modifyPom {
    project {
        name 'Litterat'
        description 'A fast and flexible serialization library.'
        url 'http://litterat.io/'
        packaging 'jar'
        licenses {
            license {
                url 'https://github.com/litterat/litterat/blob/master/LICENSE.TXT'
            }
        }
        scm {
            url 'https://github.com/litterat/litterat/litterat-schema'
            connection 'scm:git:https://github.com/litterat/litterat/litterat-schema.git'
            developerConnection 'scm:git@github.com:litterat/litterat/litterat-schema.git'
        }
        developers {
            developer {
                id 'oobles'
                name 'David Ryan'
            }
        }

    }
}

boolean isLibrary(entry) {
  return entry.properties.kind.equals('lib') || entry.properties.kind.equals('src')
}
boolean isTestScope(entry) {
  return entry.entryAttributes.get('gradle_used_by_scope').equals('test'); }
boolean isModule(entry) {
  return isLibrary(entry) && !isTestScope(entry); }
boolean isSource(entry) { return entry.properties.kind.equals('src'); }


