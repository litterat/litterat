/*
 * Copyright (c) 2020, Live Media Pty. Ltd. All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
 
buildscript {
    repositories {
       mavenCentral()
    }
}

plugins {
    id 'java'
    id 'eclipse'
    id 'jacoco'
}

repositories {
   mavenCentral()
}

dependencies {

   implementation project(":litterat-bind")
	
   // https://mvnrepository.com/artifact/org.junit.jupiter/junit-jupiter-api
   implementation group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: '5.7.1'
	
   // https://mvnrepository.com/artifact/org.junit.jupiter/junit-jupiter-engine
   implementation group: 'org.junit.jupiter', name: 'junit-jupiter-engine', version: '5.7.1'
   
}

java {
   modularity.inferModulePath = true
   
   sourceCompatibility = JavaVersion.VERSION_16
   targetCompatibility = JavaVersion.VERSION_16
}

test {
	useJUnitPlatform()
	
	afterSuite { desc, result ->
    if (!desc.parent)
        println("${result.resultType} " +
            "(${result.testCount} tests, " +
            "${result.successfulTestCount} successes, " +
            "${result.failedTestCount} failures, " +
            "${result.skippedTestCount} skipped)")
    }
}

jacocoTestReport {
    sourceSets project(':litterat-bind').sourceSets.main
    
    afterEvaluate {
        classDirectories.setFrom(files(classDirectories.files.collect {
            fileTree(dir: it, exclude: 'io/litterat/test/**')
        }))
    }
}

sourceSets {
    test {
        java.srcDir 'src/main/java'
    }
}

eclipse {
    classpath {
        // remove the source set from the Eclipse classpath because adding main/java to tests confuses eclipse plugin
        sourceSets -= [sourceSets.test]
    }
}


/*
// TODO Not realeasing to maven at this stage.
// release information

apply plugin: 'maven-publish'
apply plugin: 'com.bmuschko.nexus'
apply plugin: 'io.codearte.nexus-staging'

nexusStaging {
    packageGroup = "io.litterat" 
}

archivesBaseName = 'litterat-pep-test'
group = "io.litterat"
version = LITTERAT_VERSION

modifyPom {
  project {
        name = 'litterat-pep-test'
        description = 'Litterat serialization test samples'
        url = 'http://litterat.io/'
        licenses {
            license {
                name = 'The Apache License, Version 2.0'
                url = 'https://github.com/litterat/litterat-json/blob/master/LICENSE'
            }
        }
        developers {
            developer {
                id = 'oobles'
                name = 'David Ryan'
                email = 'david@livemedia.com.au'
            }
        }
        scm {
            connection = 'scm:git:https://github.com/litterat/litterat.git'
            developerConnection = 'scm:git@github.com:litterat/litterat.git'
            url = 'https://github.com/litterat/litterat'
        }
  }
}
*/
