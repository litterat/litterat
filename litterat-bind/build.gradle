/*
 * Copyright (c) 2020, Live Media Pty. Ltd. All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
 
buildscript {
    repositories {
       mavenCentral()
    }
    /*
    dependencies {
       classpath "io.codearte.gradle.nexus:gradle-nexus-staging-plugin:0.21.2"
   	   classpath 'com.bmuschko:gradle-nexus-plugin:2.3.1'
    }
    */
}

plugins {
    id 'java'
    id 'eclipse'
}

repositories {
   mavenCentral()
}

dependencies {
	// https://mvnrepository.com/artifact/org.ow2.asm/asm-tree
	implementation group: 'org.ow2.asm', name: 'asm-tree', version: '9.1'
	
}

java {
   modularity.inferModulePath = true
   
   sourceCompatibility = JavaVersion.VERSION_11
   targetCompatibility = JavaVersion.VERSION_11
}

// Annoying hack because Gradle and Eclipse won't play nicely together.
// https://github.com/eclipse/buildship/issues/658
/*
eclipse {
	classpath {
		file {
			whenMerged {
				//Define a module as being either a library or a project dependency.
				//Test sources are excluded because eclipse wants them on the classpath for some reason (1)
				entries.findAll { (it instanceof org.gradle.plugins.ide.eclipse.model.Library || it instanceof org.gradle.plugins.ide.eclipse.model.ProjectDependency) && !it.entryAttributes.get('gradle_used_by_scope').equals('test') }.each {
					it.entryAttributes['module'] = 'true'
				}
				
				//Test-scoped stuff should set the appropriate flag
				entries.findAll { (it.properties.kind.equals('src') || it.properties.kind.equals('lib')) && it.entryAttributes.get('gradle_used_by_scope').equals('test') }.each {
					it.entryAttributes['test'] = 'true'
				}
			}
		}
	}
}
*/
// release information
/*
apply plugin: 'maven-publish'
apply plugin: 'com.bmuschko.nexus'
apply plugin: 'io.codearte.nexus-staging'

nexusStaging {
    packageGroup = "io.litterat" 
}

archivesBaseName = 'litterat-json'
group = "io.litterat"
version = "0.5.0"

modifyPom {
  project {
        name = 'litterat-json'
        description = 'Litterat JSON serialization'
        url = 'http://litterat.io/'
        licenses {
            license {
                name = 'The Apache License, Version 2.0'
                url = 'https://github.com/litterat/litterat-json/blob/master/LICENSE'
            }
        }
        developers {
            developer {
                id = 'oobles'
                name = 'David Ryan'
                email = 'david@livemedia.com.au'
            }
        }
        scm {
            connection = 'scm:git:https://github.com/litterat/litterat-json.git'
            developerConnection = 'scm:git@github.com:litterat/litterat-json.git'
            url = 'https://github.com/litterat/litterat-json'
        }
  }
}
*/