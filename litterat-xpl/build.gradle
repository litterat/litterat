/*
 * Copyright (c) 2003-2020, Live Media Pty. Ltd. All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

buildscript {
    repositories {
       mavenCentral()
    }
}

plugins {
    id 'java'
    id 'eclipse'
}

repositories {
   mavenCentral()
}

dependencies {

    implementation project(":litterat-bind")
    implementation project(":litterat-model")

	// https://mvnrepository.com/artifact/org.junit.jupiter/junit-jupiter-api
	testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: '5.7.1'
	
	// https://mvnrepository.com/artifact/org.junit.jupiter/junit-jupiter-engine
	testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-engine', version: '5.7.1'
	
}

java {
   modularity.inferModulePath = true
   
   sourceCompatibility = JavaVersion.VERSION_11
   targetCompatibility = JavaVersion.VERSION_11
}

test {
	useJUnitPlatform()
	
	afterSuite { desc, result ->
    if (!desc.parent)
        println("${result.resultType} " +
            "(${result.testCount} tests, " +
            "${result.successfulTestCount} successes, " +
            "${result.failedTestCount} failures, " +
            "${result.skippedTestCount} skipped)")
    }
}

/*

TODO Not publishing to Maven yet.

group = 'io.litterat'
version = '1.4.0'

modifyPom {
    project {
        name 'Litterat'
        description 'A fast and flexible serialization library.'
        url 'http://litterat.io/'
        packaging 'jar'
        licenses {
            license {
                url 'https://github.com/litterat/litterat/blob/master/LICENSE.TXT'
            }
        }
        scm {
            url 'https://github.com/litterat/litterat-java'
            connection 'scm:git:https://github.com/litterat/litterat.git'
            developerConnection 'scm:git@github.com:litterat/litterat.git'
        }
        developers {
            developer {
                id 'oobles'
                name 'David Ryan'
            }
        }

    }
}

boolean isLibrary(entry) {
  return entry.properties.kind.equals('lib') || entry.properties.kind.equals('src')
}
boolean isTestScope(entry) {
  return entry.entryAttributes.get('gradle_used_by_scope').equals('test'); }
boolean isModule(entry) {
  return isLibrary(entry) && !isTestScope(entry); }
boolean isSource(entry) { return entry.properties.kind.equals('src'); }

*/
