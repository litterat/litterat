/*
 * Copyright (c) 2020, Live Media Pty. Ltd. All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
 
buildscript {
    repositories {
       mavenCentral()
    }
}


plugins {
    id 'java'
    id 'eclipse'
}


sourceCompatibility = 11
targetCompatibility = 11

repositories {
   mavenCentral()
}

dependencies {

   implementation project(":litterat-pep")
   
   implementation project(":litterat-pep-test")
  
  
   implementation project(":litterat-json")
   
   // https://mvnrepository.com/artifact/org.junit.jupiter/junit-jupiter-api
   implementation group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: '5.6.0'
	
   // https://mvnrepository.com/artifact/org.junit.jupiter/junit-jupiter-engine
   implementation group: 'org.junit.jupiter', name: 'junit-jupiter-engine', version: '5.6.0'
	
}

java {
   modularity.inferModulePath = true
}

// Annoying hack because Gradle and Eclipse won't play nicely together.
// https://github.com/eclipse/buildship/issues/658
eclipse {
	classpath {
		file {
			whenMerged {
				//Define a module as being either a library or a project dependency.
				//Test sources are excluded because eclipse wants them on the classpath for some reason (1)
				entries.findAll { (it instanceof org.gradle.plugins.ide.eclipse.model.Library || it instanceof org.gradle.plugins.ide.eclipse.model.ProjectDependency) && !it.entryAttributes.get('gradle_used_by_scope').equals('test') }.each {
					it.entryAttributes['module'] = 'true'
				}
				
				//Test-scoped stuff should set the appropriate flag
				entries.findAll { (it.properties.kind.equals('src') || it.properties.kind.equals('lib')) && it.entryAttributes.get('gradle_used_by_scope').equals('test') }.each {
					it.entryAttributes['test'] = 'true'
				}
			}
		}
	}
}


